"use strict";(self.webpackChunkanytype_docs=self.webpackChunkanytype_docs||[]).push([[708],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},8858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"anytype_component_relationships","title":"Component Relationships","description":"This document outlines the relationships between the various components of the Anytype system, showing how they interact and depend on each other.","source":"@site/docs/anytype_component_relationships.md","sourceDirName":".","slug":"/anytype_component_relationships","permalink":"/anytype-docs/docs/anytype_component_relationships","draft":false,"unlisted":false,"editUrl":"https://github.com/konan69/anytype-docs/tree/main/docs/anytype_component_relationships.md","tags":[],"version":"current","frontMatter":{"id":"anytype_component_relationships","title":"Component Relationships","sidebar_label":"Component Relationships","weight":2},"sidebar":"tutorialSidebar","previous":{"title":"Main Documentation","permalink":"/anytype-docs/docs/anytype_documentation"},"next":{"title":"Project Tracker","permalink":"/anytype-docs/docs/project_analysis_tracker"}}');var o=t(4848),s=t(8453);const r={id:"anytype_component_relationships",title:"Component Relationships",sidebar_label:"Component Relationships",weight:2},c="Anytype Component Relationships",a={},l=[{value:"System Architecture Diagram",id:"system-architecture-diagram",level:2},{value:"Component Interaction Flow",id:"component-interaction-flow",level:2},{value:"1. Frontend to Backend Communication",id:"1-frontend-to-backend-communication",level:3},{value:"2. Backend to Protocol Definitions",id:"2-backend-to-protocol-definitions",level:3},{value:"3. Backend to Sync Infrastructure",id:"3-backend-to-sync-infrastructure",level:3},{value:"4. Data Flow for Content Creation/Editing",id:"4-data-flow-for-content-creationediting",level:3},{value:"Service Dependencies",id:"service-dependencies",level:2},{value:"Frontend Dependencies",id:"frontend-dependencies",level:3},{value:"Backend Dependencies",id:"backend-dependencies",level:3},{value:"Protocol Dependencies",id:"protocol-dependencies",level:3},{value:"File Relationship Map",id:"file-relationship-map",level:2},{value:"Frontend (anytype-ts)",id:"frontend-anytype-ts",level:3},{value:"Backend (anytype-heart)",id:"backend-anytype-heart",level:3},{value:"Protocol Definitions (any-block)",id:"protocol-definitions-any-block",level:3},{value:"Key Integration Points",id:"key-integration-points",level:2},{value:"1. Frontend-Backend Integration",id:"1-frontend-backend-integration",level:3},{value:"2. CRDT Synchronization",id:"2-crdt-synchronization",level:3},{value:"3. Object Store Integration",id:"3-object-store-integration",level:3},{value:"Key Implementation Insights",id:"key-implementation-insights",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"anytype-component-relationships",children:"Anytype Component Relationships"})}),"\n",(0,o.jsx)(n.p,{children:"This document outlines the relationships between the various components of the Anytype system, showing how they interact and depend on each other."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," This document focuses on the high-level relationships between components. For detailed analysis of specific components, refer to the component-specific documentation files in the corresponding directories."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"system-architecture-diagram",children:"System Architecture Diagram"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"+--------------------------------------------------------------------------------------------+\n|                                     ANYTYPE SYSTEM                                         |\n+--------------------------------------------------------------------------------------------+\n\n+---------------------+     +----------------------+     +--------------------+\n|    FRONTEND         |     |      BACKEND         |     |      SYNC          |\n|   (anytype-ts)      |     |    (anytype-heart)   |     |   INFRASTRUCTURE   |\n+---------------------+     +----------------------+     +--------------------+\n|                     |     |                      |     |                    |\n| +---------------+   |     | +----------------+   |     | +--------------+   |\n| |               |   |     | |                |   |     | |              |   |\n| |  UI           |   |     | |  Core Services |   |     | |  Network     |   |\n| |  Components   |   |     | |                |   |     | |  Services    |   |\n| |               |   |     | +----------------+   |     | |              |   |\n| +-------+-------+   |     | |                |   |     | +--------------+   |\n|         |           |     | |  Data Services |   |     | |              |   |\n| +-------v-------+   |     | |                |   |     | |  Space       |   |\n| |               |   |     | +----------------+   |     | |  Services    |   |\n| |  State        |   |     | |                |   |     | |              |   |\n| |  Management   |   |     | |  Storage       |   |     | +--------------+   |\n| |  (MobX)       |   |     | |  Services      |   |     | |              |   |\n| |               |   |     | |                |   |     | |  File        |   |\n| +-------+-------+   |     | +----------------+   |     | |  Services    |   |\n|         |           |     | |                |   |     | |              |   |\n| +-------v-------+   |     | |  Sync          |   |     | +--------------+   |\n| |               |   |     | |  Services      |   |     | |              |   |\n| |  IPC          |<----------------+------------------\x3e| |  Identity     |   |\n| |  Bridge       |   |     | |                |   |     | |  Services    |   |\n| |               |   |     | +-------^--------+   |     | |              |   |\n| +---------------+   |     |         |          ^ |     | +--------------+   |\n|                     |     |         |          | |     |                    |\n+---------------------+     +---------+----------+-+     +--------------------+\n                                      |          |\n                                      v          |\n                             +--------+----------+-+\n                             |                     |\n                             | PROTOCOL DEFINITIONS |\n                             |    (any-block)       |\n                             |                     |\n                             +---------------------+\n"})}),"\n",(0,o.jsx)(n.h2,{id:"component-interaction-flow",children:"Component Interaction Flow"}),"\n",(0,o.jsx)(n.h3,{id:"1-frontend-to-backend-communication",children:"1. Frontend to Backend Communication"}),"\n",(0,o.jsx)(n.p,{children:"The frontend (anytype-ts) communicates with the backend (anytype-heart) through Electron's IPC mechanism:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Frontend Component -> MobX Store -> IPC Bridge -> Backend Service -> Business Logic\n"})}),"\n",(0,o.jsx)(n.p,{children:"Key files involved:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-ts/src/ts/lib/api.ts"}),": Frontend API wrapper for IPC calls"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-ts/electron.js"}),": Electron main process handling IPC"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/pkg/lib/gateway/gateway.go"}),": Backend IPC handler"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This communication leverages a command pattern where each backend operation is wrapped in a function that constructs a Protocol Buffer request."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["For detailed analysis of this interaction, see ",(0,o.jsx)(n.a,{href:"/anytype-docs/docs/integration/",children:"Frontend-Backend Integration Documentation"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-backend-to-protocol-definitions",children:"2. Backend to Protocol Definitions"}),"\n",(0,o.jsx)(n.p,{children:"The backend uses Protocol Buffer definitions for data structures and serialization:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Backend Service -> Protocol Buffer Objects -> Data Storage/Transmission\n"})}),"\n",(0,o.jsx)(n.p,{children:"Key files involved:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"any-block/models.proto"}),": Core data models"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"any-block/changes.proto"}),": CRDT change definitions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"any-block/events.proto"}),": Event definitions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/pb/"}),": Generated Go code from protocol definitions"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Protocol Buffers provide a consistent format for data serialization across components, ensuring type safety and efficiency."}),"\n",(0,o.jsx)(n.h3,{id:"3-backend-to-sync-infrastructure",children:"3. Backend to Sync Infrastructure"}),"\n",(0,o.jsx)(n.p,{children:"The backend communicates with the sync infrastructure for data synchronization:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Backend Sync Service -> Network Layer -> Sync Infrastructure -> Other Devices\n"})}),"\n",(0,o.jsx)(n.p,{children:"Key files involved:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/space/spacecore/"}),": Core space synchronization"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/core/filestorage/filesync/"}),": File synchronization"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/core/identity/"}),": Identity management"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This interaction is built on CRDT principles, allowing changes to be synchronized consistently between devices."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["For detailed analysis of the synchronization mechanism, see ",(0,o.jsx)(n.a,{href:"/anytype-docs/docs/sync/",children:"CRDT and Sync Mechanism Documentation"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"4-data-flow-for-content-creationediting",children:"4. Data Flow for Content Creation/Editing"}),"\n",(0,o.jsx)(n.p,{children:"When creating or editing content, the data flows through these components:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"UI Component -> MobX Store -> IPC -> Backend Service ->\nCRDT Change -> Storage -> Event Generation ->\nEvent Broadcast -> Frontend Update\n"})}),"\n",(0,o.jsx)(n.p,{children:"Key files involved:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-ts/src/ts/component/block/"}),": Block rendering components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-ts/src/ts/store/block.ts"}),": Block state management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/core/block.go"}),": Block operations backend"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"anytype-heart/core/object.go"}),": Object operations backend"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This bidirectional flow ensures that changes are immediately reflected in the UI while being persistently stored and properly synchronized."}),"\n",(0,o.jsx)(n.h2,{id:"service-dependencies",children:"Service Dependencies"}),"\n",(0,o.jsx)(n.h3,{id:"frontend-dependencies",children:"Frontend Dependencies"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"React Components"})," depend on ",(0,o.jsx)(n.strong,{children:"MobX Stores"})," for state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MobX Stores"})," depend on ",(0,o.jsx)(n.strong,{children:"IPC Bridge"})," for backend communication"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"UI Components"})," depend on ",(0,o.jsx)(n.strong,{children:"Block Rendering System"})," for content display"]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["For detailed analysis of the frontend state management, see ",(0,o.jsx)(n.a,{href:"/anytype-docs/docs/frontend/stores",children:"Frontend State Management Documentation"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"backend-dependencies",children:"Backend Dependencies"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Core Services"})," depend on ",(0,o.jsx)(n.strong,{children:"Protocol Definitions"})," for data structures"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Data Services"})," depend on ",(0,o.jsx)(n.strong,{children:"Storage Services"})," for persistence"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Sync Services"})," depend on ",(0,o.jsx)(n.strong,{children:"Network Services"})," for communication"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"All Services"})," depend on ",(0,o.jsx)(n.strong,{children:"Bootstrap System"})," for initialization"]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["For detailed analysis of key backend services, see ",(0,o.jsx)(n.a,{href:"/anytype-docs/docs/backend/block_service",children:"Block Service Documentation"})," and ",(0,o.jsx)(n.a,{href:"/anytype-docs/docs/backend/object_store",children:"Object Store Documentation"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"protocol-dependencies",children:"Protocol Dependencies"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"models.proto"})," defines base structures used by all components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"changes.proto"})," depends on ",(0,o.jsx)(n.strong,{children:"models.proto"})," for change structures"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"events.proto"})," depends on ",(0,o.jsx)(n.strong,{children:"models.proto"})," for event structures"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"file-relationship-map",children:"File Relationship Map"}),"\n",(0,o.jsx)(n.h3,{id:"frontend-anytype-ts",children:"Frontend (anytype-ts)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"src/ts/\n|\n\u251c\u2500\u2500 app.tsx                    # Main application entry point\n\u251c\u2500\u2500 entry.tsx                  # React rendering entry point\n|\n\u251c\u2500\u2500 component/                 # React components\n|   \u251c\u2500\u2500 block/                 # Block rendering components\n|   \u251c\u2500\u2500 page/                  # Page components\n|   \u2514\u2500\u2500 ...                    # Other UI components\n|\n\u251c\u2500\u2500 store/                     # MobX state management\n|   \u251c\u2500\u2500 index.ts               # Store exports\n|   \u251c\u2500\u2500 block.ts               # Block state management\n|   \u251c\u2500\u2500 record.ts              # Record/object state management\n|   \u251c\u2500\u2500 common.ts              # Global state management\n|   \u2514\u2500\u2500 ...                    # Other stores\n|\n\u251c\u2500\u2500 model/                     # Data models\n|   \u251c\u2500\u2500 block.ts               # Block model\n|   \u251c\u2500\u2500 account.ts             # Account model\n|   \u2514\u2500\u2500 ...                    # Other models\n|\n\u2514\u2500\u2500 lib/                       # Utility functions\n    \u251c\u2500\u2500 api.ts                 # API wrapper for IPC\n    \u2514\u2500\u2500 ...                    # Other utilities\n"})}),"\n",(0,o.jsx)(n.h3,{id:"backend-anytype-heart",children:"Backend (anytype-heart)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"core/\n|\n\u251c\u2500\u2500 anytype/\n|   \u2514\u2500\u2500 bootstrap.go           # Service initialization\n|\n\u251c\u2500\u2500 block.go                   # Block service implementation\n\u251c\u2500\u2500 block_dataview.go          # Dataview functionality\n\u251c\u2500\u2500 object.go                  # Object service implementation\n\u251c\u2500\u2500 space.go                   # Space service implementation\n|\n\u251c\u2500\u2500 block/                     # Block-related functionality\n|   \u251c\u2500\u2500 editor/                # Block editor\n|   \u2514\u2500\u2500 ...                    # Other block operations\n|\n\u2514\u2500\u2500 filestorage/               # File storage functionality\n    \u251c\u2500\u2500 filesync/              # File synchronization\n    \u2514\u2500\u2500 ...                    # Other file operations\n\npkg/lib/\n|\n\u251c\u2500\u2500 localstore/                # Local storage implementation\n|   \u251c\u2500\u2500 objectstore/           # Object storage\n|   \u251c\u2500\u2500 filestore/             # File storage\n|   \u2514\u2500\u2500 ftsearch/              # Full-text search\n|\n\u2514\u2500\u2500 gateway/                   # IPC gateway\n    \u2514\u2500\u2500 gateway.go             # IPC handler\n"})}),"\n",(0,o.jsx)(n.h3,{id:"protocol-definitions-any-block",children:"Protocol Definitions (any-block)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"any-block/\n|\n\u251c\u2500\u2500 models.proto               # Base data structures\n\u251c\u2500\u2500 changes.proto              # CRDT change definitions\n\u2514\u2500\u2500 events.proto               # Event definitions\n"})}),"\n",(0,o.jsx)(n.h2,{id:"key-integration-points",children:"Key Integration Points"}),"\n",(0,o.jsx)(n.h3,{id:"1-frontend-backend-integration",children:"1. Frontend-Backend Integration"}),"\n",(0,o.jsx)(n.p,{children:"The frontend and backend are integrated through:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Binary Embedding"}),": The anytype-heart backend is compiled and embedded in the frontend application"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"IPC Communication"}),": Electron's IPC mechanism provides the communication channel"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Event System"}),": A bidirectional event system allows for state synchronization"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Command Pattern"}),": Each backend operation is wrapped in a function in the frontend"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Data Mappers"}),": Convert between Protocol Buffer objects and JavaScript objects"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-crdt-synchronization",children:"2. CRDT Synchronization"}),"\n",(0,o.jsx)(n.p,{children:"The CRDT implementation enables:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Offline-First Operation"}),": All operations can be performed locally without an internet connection"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Conflict Resolution"}),": Concurrent changes from different devices are merged consistently"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Eventual Consistency"}),": All replicas eventually converge to the same state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Selective Synchronization"}),": Users can control what gets synchronized"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"3-object-store-integration",children:"3. Object Store Integration"}),"\n",(0,o.jsx)(n.p,{children:"The Object Store provides:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Persistent Storage"}),": Reliable storage for application data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Querying Capabilities"}),": Efficient data access and filtering"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Transaction Support"}),": Ensures data consistency"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Indexing"}),": Optimizes common access patterns"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"key-implementation-insights",children:"Key Implementation Insights"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Clear Separation of Concerns"}),": Each component has a well-defined responsibility, making the system maintainable and extensible."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Protocol-First Design"}),": Protocol Buffers provide a consistent data format across components, ensuring type safety and efficiency."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Event-Driven Architecture"}),": The system uses events for communication between components, enabling loose coupling and reactivity."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Offline-First Approach"}),": All operations are designed to work offline first, with synchronization as an optional layer."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"CRDT-Based Synchronization"}),": The use of CRDTs enables conflict-free updates in a distributed environment, essential for multi-device use."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Modular Services"}),": The backend follows a service-oriented architecture with clear interfaces between services."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Reactive UI"}),": The frontend uses MobX for reactive state management, ensuring the UI stays in sync with the application state."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This document provides a comprehensive overview of how the various components in Anytype interact and depend on each other, forming a cohesive system while maintaining clear boundaries between responsibilities."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"For a complete understanding of the Anytype system, combine this component relationship overview with the detailed component-specific documentation files."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);