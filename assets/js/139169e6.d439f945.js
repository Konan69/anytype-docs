"use strict";(self.webpackChunkanytype_docs=self.webpackChunkanytype_docs||[]).push([[55],{5941:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"frontend/index","title":"Frontend Documentation","description":"This section contains detailed documentation about the Anytype frontend, which is built using TypeScript and React.","source":"@site/docs/frontend/index.md","sourceDirName":"frontend","slug":"/frontend/","permalink":"/anytype-docs/docs/frontend/","draft":false,"unlisted":false,"editUrl":"https://github.com/konan69/anytype-docs/tree/main/docs/frontend/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Frontend Documentation","sidebar_label":"Frontend"},"sidebar":"tutorialSidebar","previous":{"title":"Project Tracker","permalink":"/anytype-docs/docs/project_analysis_tracker"},"next":{"title":"State Management","permalink":"/anytype-docs/docs/frontend/stores"}}');var i=t(4848),s=t(8453);const r={id:"index",title:"Frontend Documentation",sidebar_label:"Frontend"},a="Frontend Documentation",d={},c=[{value:"State Management",id:"state-management",level:2},{value:"Key Components",id:"key-components",level:2}];function l(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"frontend-documentation",children:"Frontend Documentation"})}),"\n",(0,i.jsx)(n.p,{children:"This section contains detailed documentation about the Anytype frontend, which is built using TypeScript and React."}),"\n",(0,i.jsx)(n.h2,{id:"state-management",children:"State Management"}),"\n",(0,i.jsx)(n.p,{children:"The frontend uses MobX for state management, with several key stores:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Block Store"})," - Manages the block data within objects"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Record Store"})," - Manages object records and their metadata"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Common Store"})," - Handles application-wide state"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Detail Store"})," - Manages UI details and view state"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Editor"})," - Rich text editing capabilities"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object Views"})," - Different ways to view and interact with objects"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Navigation"})," - Application navigation and routing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"UI Components"})," - Reusable UI components"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);